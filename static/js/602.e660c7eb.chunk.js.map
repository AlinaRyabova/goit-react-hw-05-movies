{"version":3,"file":"static/js/602.e660c7eb.chunk.js","mappings":"wNAGaA,EAAOC,EAAAA,EAAAA,GAAH,kDAIJC,EAAOD,EAAAA,EAAAA,GAAH,yFAMJE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,qE,SCgBtB,EAzBkB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAMG,KAAI,SAAAC,GAAI,OACb,SAACP,EAAD,WACE,SAACC,EAAD,CAAWO,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAApD,SACGG,EAAKK,SAFCL,EAAKE,GADH,KASpB,C,sKChBYI,EAAad,EAAAA,EAAAA,KAAH,8FAMVe,EAAQf,EAAAA,EAAAA,MAAH,2MAWLgB,EAAShB,EAAAA,EAAAA,OAAH,qL,SCenB,EA9Ba,SAAC,GAAsB,IAApBiB,EAAmB,EAAnBA,aACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,UAACN,EAAD,CAAYO,SANO,SAAAC,GACnBA,EAAMC,iBACNN,EAAaE,EAAMK,cACpB,EAGC,WACE,SAACT,EAAD,CACEU,KAAK,OACLC,KAAK,QACLC,WAAS,EACTC,MAAOT,EACPU,SAhBoB,SAAAP,GACxBF,EAASE,EAAMQ,OAAOF,MACvB,KAgBG,SAACZ,EAAD,CAAQS,KAAK,SAAb,SAAsB,aAG3B,E,UCUD,EAhCe,WACb,OAAsCP,EAAAA,EAAAA,UAAS,IAA/C,eAAOa,EAAP,KAAoBC,EAApB,KACA,GAA8Bd,EAAAA,EAAAA,WAAS,GAAvC,eAAOe,EAAP,KAAgBC,EAAhB,KACA,GAAwChB,EAAAA,EAAAA,WAAS,GAAjD,eAAOiB,EAAP,KAAqBC,EAArB,KAEMnB,EAAY,mCAAG,WAAMoB,GAAN,uFAEjBH,GAAW,GAFM,UAGWI,EAAAA,EAAAA,IAAqBD,GAHhC,OAGXE,EAHW,OAIjBP,EAAeO,GACfH,EAAyC,IAAzBG,EAAcC,QALb,gDAOjBC,QAAQC,IAAR,MACAV,EAAe,IACfI,GAAgB,GATC,yBAWjBF,GAAW,GAXM,4EAAH,sDAelB,OACE,6BACE,SAAC,EAAD,CAAMjB,aAAcA,IACnBgB,IAAW,SAACU,EAAA,EAAD,IACXR,GAAuC,IAAvBJ,EAAYS,SAC3B,uBAAG,4DAEJT,EAAYS,OAAS,IAAK,SAACI,EAAA,EAAD,CAAWxC,MAAO2B,MAGlD,C,kMClCDc,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbZ,EAAoB,mCAAG,WAAMa,GAAN,uFACXN,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DK,IAFnD,cAC5BH,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBE,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBK,EAAS,mCAAG,WAAMD,GAAN,uFACAR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,KAAKM,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["pages/MovieList/MovieList.styled.jsx","pages/MovieList/MovieList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/MovieApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #62044a;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink } from './MovieList.styled';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 3px solid #770959;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 3px solid #770959;\n  color: #2d0231;\n  font-weight: 600;\n  font-size: 20px;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchForm, Input, Button } from './Form.styled';\n\nconst Form = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\n\nForm.propTypes = {\n  searchMovies: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'pages/MovieList/MovieList';\nimport Form from 'components/Form/Form';\nimport { fetchSearchByKeyword } from 'services/MovieApi';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  const searchMovies = async queryMovie => {\n    try {\n      setLoading(true);\n      const searchResults = await fetchSearchByKeyword(queryMovie);\n      setSearchFilms(searchResults);\n      setNoMoviesText(searchResults.length === 0);\n    } catch (error) {\n      console.log(error);\n      setSearchFilms([]);\n      setNoMoviesText(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <main>\n      <Form searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {noMoviesText && searchFilms.length === 0 && (\n        <p>There is no movies with this request. Please, try again</p>\n      )}\n      {searchFilms.length > 0 && <MovieList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'df31fc31c1506c9b998d39d3a9f0dd23';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","Item","MovieLink","Link","films","location","useLocation","map","film","to","id","state","from","title","SearchForm","Input","Button","searchMovies","useState","query","setQuery","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","loading","setLoading","noMoviesText","setNoMoviesText","queryMovie","fetchSearchByKeyword","searchResults","length","console","log","Loader","MovieList","axios","API_KEY","fetchTrending","response","data","results","keyword","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}
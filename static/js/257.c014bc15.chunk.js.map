{"version":3,"file":"static/js/257.c014bc15.chunk.js","mappings":"8SAGaA,EAAYC,EAAAA,EAAAA,IAAH,yEAMTC,EAAOD,EAAAA,EAAAA,GAAH,2IASJE,EAAWF,EAAAA,EAAAA,GAAH,+JAURG,GAAWH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,8GAORK,EAASL,EAAAA,EAAAA,OAAH,oM,SCkEnB,EAzFqB,WAAO,IAAD,IACjBM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,IAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAsB,mCAAG,oGAE3BJ,GAAW,GAFgB,UAGDK,EAAAA,EAAAA,IAAkBX,GAHjB,OAGrBY,EAHqB,OAI3BR,EAAaQ,GAJc,gDAM3BC,QAAQC,IAAR,MAN2B,yBAQ3BR,GAAW,GARgB,4EAAH,qDAY5BI,GACD,GAAE,CAACV,KAECG,EACH,OAAO,KAGT,IACEY,EAOEZ,EAPFY,MACAC,EAMEb,EANFa,aACAC,EAKEd,EALFc,WACAC,EAIEf,EAJFe,SACAC,EAGEhB,EAHFgB,OACAC,EAEEjB,EAFFiB,YACAC,EACElB,EADFkB,eAGF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAE,oBAAEf,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,SAACzB,EAAD,CAAQ0B,KAAK,SAAb,SAAsB,cAEvBpB,IAAW,SAACqB,EAAA,EAAD,KAEZ,UAACjC,EAAD,YACE,gBACEkC,MAAM,QACNC,IACER,EAAW,yCAC2BA,GAClC,4EAENS,IAAKR,KAGP,4BACE,0BACGN,EAAM,KAAGC,EAAac,MAAM,EAAG,GAAG,QAErC,yBAAG,eAAab,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,SAACvB,EAAD,UACGwB,EAAOY,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAOvB,mBAEA,4BACE,wBAAI,4BACJ,UAACtC,EAAD,YACE,yBACE,SAACC,EAAD,CAAUyB,GAAG,OAAb,SAAoB,YAEtB,yBACE,SAACzB,EAAD,CAAUyB,GAAG,UAAb,SAAuB,kBAG3B,mBACA,SAAC,KAAD,SAIP,C,kMCjGDa,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFnD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpB7B,EAAiB,mCAAG,WAAMX,GAAN,uFACRmC,EAAAA,EAAAA,IAAA,gBACZnC,EADY,oBACOoC,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBI,EAAS,mCAAG,WAAM3C,GAAN,uFACAmC,EAAAA,EAAAA,IAAA,gBACZnC,EADY,4BACeoC,EADf,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAM7C,GAAN,uFACHmC,EAAAA,EAAAA,IAAA,gBACZnC,EADY,4BACeoC,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/MovieApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 24px;\n  gap: 24px;\n`;\n\nexport const List = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 18px;\n  color: #5a0341;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 3px solid #57035f;\n  color: #57044c;\n  font-weight: 400;\n  font-size: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/MovieApi';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Container,\n  List,\n  ListInfo,\n  LinkInfo,\n  Button,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetailsFilms = async () => {\n      try {\n        setLoading(true);\n        const detailMovie = await fetchMovieDetails(movieId);\n        setMovieInfo(detailMovie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetailsFilms();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo;\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <Button type=\"button\">Go back</Button>\n      </Link>\n      {loading && <Loader />}\n\n      <Container>\n        <img\n          width=\"300px\"\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : '\thttps://www.kinofilms.ua/ukr/movie/687355/?photo=751821&g=m687355_5.jpg'\n          }\n          alt={original_title}\n        />\n\n        <div>\n          <h1>\n            {title} ({release_date.slice(0, 4)})\n          </h1>\n          <p>User score: {popularity}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <List>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </List>\n        </div>\n      </Container>\n\n      <hr />\n\n      <div>\n        <h3>Additional information</h3>\n        <ListInfo>\n          <li>\n            <LinkInfo to=\"cast\">Cast</LinkInfo>\n          </li>\n          <li>\n            <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n          </li>\n        </ListInfo>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'df31fc31c1506c9b998d39d3a9f0dd23';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Container","styled","List","ListInfo","LinkInfo","Link","Button","movieId","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","fetchMovieDetailsFilms","fetchMovieDetails","detailMovie","console","log","title","release_date","popularity","overview","genres","poster_path","original_title","to","state","from","type","Loader","width","src","alt","slice","map","genre","name","id","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchCast","cast","fetchReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/736.8591cb51.chunk.js","mappings":"8RAEaA,EAAOC,EAAAA,EAAAA,GAAH,kDAIJC,EAAOD,EAAAA,EAAAA,EAAH,yF,SC+CjB,EA/Ca,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBF,GAAW,GADO,mBAISG,EAAAA,EAAAA,GAAUT,GAJnB,OAIVU,EAJU,OAKhBN,EAAUM,GALM,gDAOhBC,QAAQC,IAAR,MAPgB,yBAShBN,GAAW,GATK,4EAAH,qDAajBE,GACD,GAAE,CAACR,KAGF,2BACGK,GAAU,SAACQ,EAAA,EAAD,IAAa,MAExB,SAAChB,EAAD,UACGM,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACV,2BACE,gBACEC,MAAM,QACNC,IACEL,EAAY,yCAC0BA,GAD1B,4EAIdM,IAAKL,KAEP,SAAClB,EAAD,UAAOmB,KACP,UAACnB,EAAD,WAAM,cAAYoB,OAXXJ,EADC,QAkBnB,C,kMCjDDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFnD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBG,EAAiB,mCAAG,WAAM/B,GAAN,uFACRuB,EAAAA,EAAAA,IAAA,gBACZvB,EADY,oBACOwB,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBlB,EAAS,mCAAG,WAAMT,GAAN,uFACAuB,EAAAA,EAAAA,IAAA,gBACZvB,EADY,4BACewB,EADf,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMjC,GAAN,uFACHuB,EAAAA,EAAAA,IAAA,gBACZvB,EADY,4BACewB,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/MovieApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/MovieApi';\nimport Loader from 'components/Loader/Loader';\nimport { List, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      setLoading(true);\n\n      try {\n        const actorsData = await fetchCast(movieId);\n        setActors(actorsData);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchActors();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading ? <Loader /> : null}\n\n      <List>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `\thttps://www.kinofilms.ua/ukr/movie/687355/?photo=751821&g=m687355_5.jpg`\n              }\n              alt={original_name}\n            />\n            <Text>{name}</Text>\n            <Text>Character: {character}</Text>\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'df31fc31c1506c9b998d39d3a9f0dd23';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","Text","movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","fetchActors","fetchCast","actorsData","console","log","Loader","map","id","profile_path","original_name","name","character","width","src","alt","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","cast","fetchReviews"],"sourceRoot":""}